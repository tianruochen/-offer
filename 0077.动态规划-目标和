题目：

给定一个非负整数的集合nums和目标S，现在你有两个符号“+”和“-”，对于每个整数，你从这两个符号中选择其中一个作为该整数的标号。
找到赋予标号后和为S的标记方法数。

解题思路：

先使用数学思路，可以知道赋予标号后，集合中包含负数这正数，则有 sum(Positive)-sum(Negtive) = S。因为sum(Positive)+sum(Negtive)=sum(nums)，
则有2*sum(Positive)=sum(nums)+S，故sum(Positive)=(sum(nums)+S)/2，由于(sum(nums)+S)/2是固定的整数，所以只需要找到和为它的组合数即可。

经过上述解析，可以将问题转化为从nums中找到和为(sum(nums)+S)/2的组合个数。这个问题可以通过动归来解决，用dp[i]存储和为i的组合数，然后对nums
中的整数n进行遍历，对于所有i>=n的i，则有dp[i]=dp[i]+dp[i-n]

代码（Python）：

class Solution(object):
    def findTargetSumWays(self, nums, S):
        """
        :type nums: List[int]
        :type S: int
        :rtype: int
        """
        if sum(nums)<S:
            return 0
        if (S+sum(nums))%2==1:
            return 0
        target = (S+sum(nums))/2
        print target
        dp = [0]*(target+1)
        dp[0] = 1
        for n in nums:
            i = target
            while(i>=n):
                dp[i] = dp[i] + dp[i-n]
                i = i-1
        return dp[target]
